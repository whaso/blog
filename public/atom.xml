<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>BOG&#39;s Blog</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-06-24T03:13:34.660Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>BOG</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>计算机原理</title>
    <link href="http://example.com/2022/02/20/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%8E%9F%E7%90%86/"/>
    <id>http://example.com/2022/02/20/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%8E%9F%E7%90%86/</id>
    <published>2022-02-20T06:59:37.000Z</published>
    <updated>2022-06-24T03:13:34.660Z</updated>
    
    <content type="html"><![CDATA[<h1 id="计算机组成原理"><a href="#计算机组成原理" class="headerlink" title="计算机组成原理"></a>计算机组成原理</h1><h2 id="1-Basic"><a href="#1-Basic" class="headerlink" title="1. Basic"></a>1. Basic</h2><h3 id="1-1-基本组成"><a href="#1-1-基本组成" class="headerlink" title="1.1. 基本组成"></a>1.1. 基本组成</h3><p><strong>五大部分</strong></p><ul><li><strong>运算器</strong>  (CPU) (主机): 算术运算、逻辑运算</li><li><strong>控制器</strong>  (CPU) (主机): 指挥各部件, 使程序运行</li><li>存储器 : 存放数据和程序<ul><li><strong>主存</strong>  (主机)</li><li>辅存  (I/O设备)</li></ul></li><li><strong>输入设备</strong>  (I/O设备)</li><li><strong>输出设备</strong>  (I/O设备)</li></ul><h3 id="1-2-各硬件部分"><a href="#1-2-各硬件部分" class="headerlink" title="1.2. 各硬件部分"></a>1.2. 各硬件部分</h3><blockquote><p>寄存, 就是暂存数据的意思, 类似快递点</p></blockquote><p><strong>主存储器</strong></p><blockquote><p>存储体存数据, MAR对应数据位置(主存地址), MDR暂存对应的实际数据</p><p>类似快递点: 存储体=&gt; 货架,  MAR =&gt; 店员,  MDR =&gt; 取货/放货 的柜台</p><p>取数据过程: CPU把地址给到MAR, 把读指令给到主存储器, 主存储器把存储体MAR地址的数据放到MDR等待使用</p><p>存数据过程: CPU把地址给到MAR, 把数据放到MDR, 把写指令给到主存储器, 主存储器根据指令把MDR中数据存储到存储体的MAR地址</p></blockquote><ul><li>存储体: 数据在存储体中按地址存储, 每个地址对应一个存储单元<ul><li>存储单元: 每个存储单元存放一串二进制代码<ul><li>存储元: 即存储二进制的电子元件, 每个存储元可存1bit</li></ul></li><li>存储字: 存储单元中二进制的组合</li><li>存储字长: 存储单元中二进制代码的位数</li></ul></li><li>MAR: 存储地址寄存器, 用于指明要读/写哪个存储单元, 其位数反映存储单元数量 Memory Address Register </li><li>MDR: 存储数据寄存器, 用于暂存要读/写的数据, 其位数=存储字长 Memory Data Register </li></ul><p><strong>运算器</strong>: 用于实现算术运算(+ - * /)、逻辑运算(与/非)</p><blockquote><p>前三个存数据, ALU执行(运算)</p></blockquote><ul><li>ACC: 累加计数器, 存放操作数、运算的结果 Accumulator</li><li>MQ: 乘商寄存器, 进行乘、除法时用  Multiple-Quotient Register</li><li>X: 通用寄存器, 存放操作数</li><li>ALU: 算数逻辑单元, 用电路实现各种算数运算、逻辑运算  Arthmetic and Logic Unit</li></ul><p><strong>控制器</strong></p><blockquote><p>PC + IR 取指令, CU执行</p></blockquote><ul><li>PC: 程序计数器, 存放下一条指令的地址  Program Counter</li><li>IR: 指令寄存器, 存放当前执行的指令    Instruction Register</li><li>CU: 控制单元, 分析指令, 给出控制信息 Control Unit</li></ul><p><strong>工作过程</strong></p><ul><li>初始: 指令、数据存入主存, PC指向第一条指令</li><li>从主存中取指令放入IR、PC自动加1, CU分析指令, CU指挥其他部件执行指令</li></ul><h3 id="1-3-计算机系统层次结构"><a href="#1-3-计算机系统层次结构" class="headerlink" title="1.3. 计算机系统层次结构"></a>1.3. 计算机系统层次结构</h3><table><thead><tr><th>微程序机器M0</th><th>传统机器M1</th><th>虚拟机器M2</th><th>虚拟机器M3</th><th>虚拟机器M4</th></tr></thead><tbody><tr><td>微指令系统</td><td>用机器语言的机器</td><td>操作系统机器</td><td>汇编语言机器</td><td>高级语言机器</td></tr><tr><td>硬件</td><td>硬件</td><td>软件</td><td>软件</td><td>软件</td></tr><tr><td>由硬件直接执行微指令</td><td>执行二进制机器指令</td><td>向上提供”广义指令”(系统调用)</td><td>用汇编程序翻译成机器语言程序</td><td>用编译程序翻译成汇编语言程序</td></tr><tr><td>微指令1 / 2 / 3</td><td>000010000000101</td><td></td><td>LOAD 5</td><td>y=a*b + c</td></tr></tbody></table><p><strong>三种级别的语言</strong></p><ul><li>机器语言: 二进制代码</li><li>汇编语言: 助记符<ul><li>将汇编语言翻译成机器语言</li></ul></li><li>高级语言: C, Python<ul><li>编译程序(编译器): 将高级语言一次全部翻译为汇编语言, 或直接翻译为机器语言</li><li>解释程序(解释器): 将高级语言翻译为机器语言, 翻译一句执行一句</li></ul></li></ul><h3 id="1-4-存储器的性能指标"><a href="#1-4-存储器的性能指标" class="headerlink" title="1.4. 存储器的性能指标"></a>1.4. 存储器的性能指标</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;计算机组成原理&quot;&gt;&lt;a href=&quot;#计算机组成原理&quot; class=&quot;headerlink&quot; title=&quot;计算机组成原理&quot;&gt;&lt;/a&gt;计算机组成原理&lt;/h1&gt;&lt;h2 id=&quot;1-Basic&quot;&gt;&lt;a href=&quot;#1-Basic&quot; class=&quot;headerlink</summary>
      
    
    
    
    <category term="计算机原理" scheme="http://example.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%8E%9F%E7%90%86/"/>
    
    
  </entry>
  
  <entry>
    <title>oracle常用命令</title>
    <link href="http://example.com/2021/12/09/python+flask+oracle+docker+alpine/"/>
    <id>http://example.com/2021/12/09/python+flask+oracle+docker+alpine/</id>
    <published>2021-12-09T08:05:29.000Z</published>
    <updated>2022-04-27T10:05:44.140Z</updated>
    
    <content type="html"><![CDATA[<h3 id="和MySQL对比"><a href="#和MySQL对比" class="headerlink" title="和MySQL对比"></a>和MySQL对比</h3><ul><li><p>大小写: <strong>oracle</strong> 本身不区分大小写 (会把关键字全部转为大写再执行),但是对引号里的字符区分大小写。</p></li><li><p>主键自增: <strong>oracle</strong> 没有自带的主键自增, 需要先创建一个序列, 再创建一个触发器, 来实现主键自增</p></li></ul><h4 id="相关命令"><a href="#相关命令" class="headerlink" title="相关命令"></a>相关命令</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看当前用户所有序列</span></span><br><span class="line">select * from user_objects where object_type=&#x27;SEQUENCE&#x27;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看表的所有触发器</span></span><br><span class="line">select * from all_triggers where table_name=&#x27;表名&#x27;; </span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建序列</span></span><br><span class="line">create sequence 序列名称(一般是表名_SEQ)</span><br><span class="line">start with 1  # 开始数字</span><br><span class="line">minvalue 1 # 最小值</span><br><span class="line">maxvalue   # 最大值</span><br><span class="line">cycle    # 是否循环 cycle / nocycle</span><br><span class="line">increment by 1  # 增长数字</span><br><span class="line">nocache # 不使用缓存</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除序列</span></span><br><span class="line">DROP SEQUENCE 序列名;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建触发器</span></span><br><span class="line">create or replace trigger 触发器名</span><br><span class="line">        before insert on 表名</span><br><span class="line">        referencing old as old new as new</span><br><span class="line">        for each row</span><br><span class="line">      begin</span><br><span class="line">        select 序列名.nextval</span><br><span class="line">          into :new.ID</span><br><span class="line">          from dual;</span><br><span class="line">      end 触发器名;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除触发器</span></span><br><span class="line">drop trigger 触发器名;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="基操"><a href="#基操" class="headerlink" title="基操"></a>基操</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查版本</span></span><br><span class="line">select * from v$version;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> sqlalchemy_URI  注: 不用指定数据库</span></span><br><span class="line">oracle+cx_oracle://&#123;账号&#125;:&#123;密码&#125;@10.168.199.21:1521/?service_name=&#123;服务名&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Docker-Alpine安装oracle客户端"><a href="#Docker-Alpine安装oracle客户端" class="headerlink" title="Docker Alpine安装oracle客户端"></a><strong>Docker Alpine安装oracle客户端</strong></h3><ol><li>进入docker容器<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker run -it --name=容器名 镜像名:latest /bin/sh       由镜像创建容器并进入(只有镜像无容器)</span><br><span class="line">或</span><br><span class="line">docker exec -it 容器名 /bin/sh                          直接进入运行中的容器</span><br></pre></td></tr></table></figure></li><li>安装必要包</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apk add libaio, libnsl, unzip</span><br></pre></td></tr></table></figure><ol start="3"><li>下载解压oracle basic包</li></ol><blockquote><p>需要对应服务器版本, 命令<code>select * from v$version;</code></p><p>各版本下载地址(32位): <a href="https://www.oracle.com/database/technologies/instant-client/linux-x86-32-downloads.html">https://www.oracle.com/database/technologies/instant-client/linux-x86-32-downloads.html</a></p><p>各版本下载地址(64位): <a href="https://www.oracle.com/database/technologies/instant-client/linux-x86-64-downloads.html">https://www.oracle.com/database/technologies/instant-client/linux-x86-64-downloads.html</a></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 下载basic免安装zip包, 需要登录验证, 所以下载链接不能复用, 要在上面链接中找对应版本下载</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 弄个单独目录存</span></span><br><span class="line">cd /usr/local</span><br><span class="line">mkdir oracle</span><br><span class="line">cd oracle</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> wget -c 支持断点续传</span></span><br><span class="line">wget -c https://download.oracle.com/otn/linux/instantclient/11204/instantclient-basic-linux.x64-11.2.0.4.0.zip</span><br><span class="line">?AuthParam=1644827926_6725c450378f19288cb3dc5d040b8a18</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> unzip 解压</span></span><br><span class="line">unzip instantclient-basic-linux.x64-11.2.0.4.0.zip?AuthParam\=1644827926_6725c450378f19288cb3dc5d040b8a18</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 整理下文件</span></span><br><span class="line">mv ./instantclient_11_2/* ./</span><br><span class="line">rmdir instantclient_11_2</span><br></pre></td></tr></table></figure><blockquote><p>unzip End-of-central-directory signature not found: 多半是下载的文件有问题, 重新下载就可以</p></blockquote><ol start="4"><li>添加环境变量</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 通过查看 /etc/profile 可以看到会加载 /etc/profile.d/目录下的 .sh结尾的文件</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 弄个单独的环境变量配置文件</span></span><br><span class="line">vi /etc/profile.d/oracle.sh</span><br><span class="line"> </span><br><span class="line">export ORACLE_HOME=/usr/local/oracle</span><br><span class="line">export NLS_LANG=AMERICAN_AMERICA.AL32UTF8</span><br><span class="line">export LD_LIBRARY_PATH=$ORACLE_HOME</span><br><span class="line">export PATH=$ORACLE_HOME:$PATH</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 测试下加上没有</span></span><br><span class="line">source /etc/profile</span><br><span class="line">echo $PATH</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 退出容器</span></span><br><span class="line">exit</span><br></pre></td></tr></table></figure><blockquote><p>注: 这里会有很多奇怪的报错, 以下为作者碰到的</p><p>报错1. Error loading shared library /usr/local/oracle/lib/libclntsh.so: No such file or directory</p><p>(一开始是打算用软链接的, 但是没用, 直接复制就可以了, 不知道为什么)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir /usr/local/oracle/lib</span><br><span class="line">cp /usr/local/oracle/libclntsh.so.11.1 /usr/local/oracle/lib/libclntsh.so</span><br></pre></td></tr></table></figure><p>如果经过以上操作扔有此报错, 且是用supervisor启动的, 可能是因为supervisor没读到环境变量, 需要在supervisor配置文件中添加</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">environment=ORACLE_HOME=&quot;/usr/local/oracle&quot;,NLS_LANG=&quot;AMERICAN_AMERICA.AL32UTF8&quot;,LD_LIBRARY_PATH=&quot;/usr/local/oracle&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>注: supervisor添加环境变量时, 多个变量以<code>,</code>分隔, 单个变量多个值以<code>:</code>分隔</p><p>报错2.<br>Error loading shared library libnsl.so.1: No such file or directory (needed by /usr/local/oracle/lib/libclntsh.so<br>(libnsl.so.1  或 libnsl.so) 建对应软链接</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ln -s /usr/lib/libnsl.so.2.0.0 /usr/lib/libnsl.so.1</span><br><span class="line">ln -s /usr/lib/libnsl.so.2.0.0 /usr/lib/libnsl.so</span><br></pre></td></tr></table></figure><p>报错3: cx_Oracle.DatabaseError: ORA-21561: OID generation faile</p><p>这是hosts文件有问题</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hostname  # 查看当前hostname</span><br><span class="line">把当前hostname加入到 /etc/hosts 文件的 127.0.0.1 即可</span><br></pre></td></tr></table></figure></blockquote><ol start="5"><li>提交镜像</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker commit -a &#x27;laowang&#x27; 容器名 镜像名:1.0.0</span><br></pre></td></tr></table></figure><ol start="6"><li>换docker启动用的镜像版本号</li></ol><blockquote><p>注: 最后会发现环境变量没有加载, 原因未知</p><p>绕路解决方法: </p><ul><li> 通过DockerFile直接运行容器的项目: 修改<code>Dockerfile</code>文件,  例: <code>CMD source /etc/profile &amp;&amp; gunicorn ....</code></li><li>通过DockerCompose启动的项目:  修改<code>docker-compose.yml</code>文件 例: <code>command: /bin/sh -c &quot;source /etc/profile &amp;&amp; gunicorn ....&quot;</code></li></ul><p><strong>python 直连测试代码</strong></p><p>import cx_Oracle<br>conn = cx_Oracle.connect(“user/passwd@host/instance”)</p></blockquote><h3 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h3><ul><li><p>报错ORA-00904: 后查到是数据库字段写错了, 和模型类的不一致</p></li><li><p>索引失效(partition of such index is in unusable state):</p><ul><li><pre><code class="sql">select index_name,status from user_indexes;  # 查失效索引alter index SYS_C00164313 rebuild;  # 重建索引</code></pre></li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;和MySQL对比&quot;&gt;&lt;a href=&quot;#和MySQL对比&quot; class=&quot;headerlink&quot; title=&quot;和MySQL对比&quot;&gt;&lt;/a&gt;和MySQL对比&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;大小写: &lt;strong&gt;oracle&lt;/strong&gt; 本身不区分大小写</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>hexo部署报错</title>
    <link href="http://example.com/2021/12/09/hexo%E9%83%A8%E7%BD%B2%E6%8A%A5%E9%94%99/"/>
    <id>http://example.com/2021/12/09/hexo%E9%83%A8%E7%BD%B2%E6%8A%A5%E9%94%99/</id>
    <published>2021-12-09T03:25:26.000Z</published>
    <updated>2021-12-09T03:26:38.987Z</updated>
    
    <content type="html"><![CDATA[<h3 id="报错内容"><a href="#报错内容" class="headerlink" title="报错内容"></a>报错内容</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">fatal: in unpopulated submodule &#x27;.deploy_git&#x27;</span><br><span class="line">FATAL &#123;</span><br><span class="line">  err: Error: Spawn failed</span><br><span class="line">      at ChildProcess.&lt;anonymous&gt; (/Users/krmac/myProjects/blog/node_modules/hexo-util/lib/spawn.js:51:21)</span><br><span class="line">      at ChildProcess.emit (node:events:390:28)</span><br><span class="line">      at Process.ChildProcess._handle.onexit (node:internal/child_process:290:12) &#123;</span><br><span class="line">    code: 128</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><p>直接删除 <code>.deploy_git</code>  重新 <code>hexo g</code> 生成即可</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;报错内容&quot;&gt;&lt;a href=&quot;#报错内容&quot; class=&quot;headerlink&quot; title=&quot;报错内容&quot;&gt;&lt;/a&gt;报错内容&lt;/h3&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pr</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>git代码迁移</title>
    <link href="http://example.com/2021/12/07/git%E4%BB%A3%E7%A0%81%E8%BF%81%E7%A7%BB/"/>
    <id>http://example.com/2021/12/07/git%E4%BB%A3%E7%A0%81%E8%BF%81%E7%A7%BB/</id>
    <published>2021-12-07T10:04:38.000Z</published>
    <updated>2021-12-09T03:19:59.917Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 拉所有分支</span></span><br><span class="line">git branch -r | grep -v &#x27;\-&gt;&#x27; | while read remote; do git branch --track &quot;$&#123;remote#origin/&#125;&quot; &quot;$remote&quot;; done</span><br><span class="line">git fetch --all</span><br><span class="line">git pull --all</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除旧源</span></span><br><span class="line">git remote rm origin</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 改为新源</span></span><br><span class="line">git remote add origin git@xxxx.com</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 推代码 全部分支 / 标签</span></span><br><span class="line">git push --all</span><br><span class="line">git push --tags</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>git代码ssh方式部署linux服务器</title>
    <link href="http://example.com/2021/09/29/git%E4%BB%A3%E7%A0%81ssh%E6%96%B9%E5%BC%8F%E9%83%A8%E7%BD%B2%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://example.com/2021/09/29/git%E4%BB%A3%E7%A0%81ssh%E6%96%B9%E5%BC%8F%E9%83%A8%E7%BD%B2%E6%9C%8D%E5%8A%A1%E5%99%A8/</id>
    <published>2021-09-29T02:30:47.000Z</published>
    <updated>2021-09-29T02:39:47.264Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-创建用户"><a href="#1-创建用户" class="headerlink" title="1. 创建用户"></a>1. 创建用户</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 创建用户, -m 创建用户家目录</span></span><br><span class="line">useradd -m 用户名</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改密码(在root用户下操作)</span></span><br><span class="line">passwd 用户名</span><br></pre></td></tr></table></figure><h2 id="2-在git项目服务器添加ssh公钥"><a href="#2-在git项目服务器添加ssh公钥" class="headerlink" title="2. 在git项目服务器添加ssh公钥"></a>2. 在git项目服务器添加ssh公钥</h2><h2 id="3-在部署服务器用户家目录添加ssh密钥"><a href="#3-在部署服务器用户家目录添加ssh密钥" class="headerlink" title="3. 在部署服务器用户家目录添加ssh密钥"></a>3. 在部署服务器用户家目录添加ssh密钥</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mkdir ~/.ssh/</span><br><span class="line">vi id_rsa  # 添加公钥</span><br><span class="line">vi id_rsa.pub  # 添加私钥</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 如果提示权限644不对(Permissions 0644 <span class="keyword">for</span> <span class="string">&#x27;~/.ssh/id_rsa&#x27;</span> are too open) 执行以下命令修改权限</span></span><br><span class="line">chmod 755 ~/.ssh/</span><br><span class="line">chmod 600 ~/.ssh/id_rsa ~/.ssh/id_rsa.pub</span><br><span class="line">chmod 644 ~/.ssh/known_hosts</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-创建用户&quot;&gt;&lt;a href=&quot;#1-创建用户&quot; class=&quot;headerlink&quot; title=&quot;1. 创建用户&quot;&gt;&lt;/a&gt;1. 创建用户&lt;/h2&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;g</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>pycharm2vscode.md</title>
    <link href="http://example.com/2021/09/20/pycharm2vscode/"/>
    <id>http://example.com/2021/09/20/pycharm2vscode/</id>
    <published>2021-09-20T01:13:59.000Z</published>
    <updated>2021-09-20T01:19:45.154Z</updated>
    
    <content type="html"><![CDATA[<h1 id="VSCode常用快捷键"><a href="#VSCode常用快捷键" class="headerlink" title="VSCode常用快捷键"></a>VSCode常用快捷键</h1><ul><li>全部折叠:  <code>cmd + k</code> + <code>cmd + 0</code></li></ul><h1 id="注"><a href="#注" class="headerlink" title="注:"></a>注:</h1><h2 id="关于导包"><a href="#关于导包" class="headerlink" title="关于导包"></a>关于导包</h2><ul><li>PyCharm 可以在项目指定目录右键指定为导包路径, VSCode需要在<code>.vscode/launch.json</code>内 <code>settings.configurations</code> 配置<code>env</code>时加上 <code>&quot;PYTHONPATH&quot;: &quot;$&#123;fileDirname&#125;/../smartbase:$&#123;fileDirname&#125;&quot;</code>多个目录通过 <code>:</code> 追加</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;VSCode常用快捷键&quot;&gt;&lt;a href=&quot;#VSCode常用快捷键&quot; class=&quot;headerlink&quot; title=&quot;VSCode常用快捷键&quot;&gt;&lt;/a&gt;VSCode常用快捷键&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;全部折叠:  &lt;code&gt;cmd + k&lt;/code&gt; </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>c++day01.md</title>
    <link href="http://example.com/2021/08/21/c-day01-md/"/>
    <id>http://example.com/2021/08/21/c-day01-md/</id>
    <published>2021-08-21T02:52:00.000Z</published>
    <updated>2022-02-21T06:20:53.351Z</updated>
    
    <content type="html"><![CDATA[<h1 id="download"><a href="#download" class="headerlink" title="download"></a>download</h1><ul><li><a href="https://sourceforge.net/projects/mingw-w64/files/Toolchains%20targetting%20Win64/Personal%20Builds/mingw-builds/8.1.0/threads-posix/seh/?tdsourcetag=s_pctim_aiomsg"> Windows10下载MinGW </a><ul><li>点击页面中的<code>x86_64-8.1.0-release-posix-seh-rt_v6-rev0.7z</code> 进行下载</li><li>下载完成后把 <code>bin</code> 目录放入系统环境变量即可在终端使用 <code>c++</code> 命令进行编译 <code>.cpp</code> 源代码</li></ul></li></ul><h1 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h1><ul><li><code>MyFirstApp</code></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Hello World! \n&quot;</span>; <span class="comment">// this will output to the console hello world</span></span><br><span class="line">    system(<span class="string">&quot;pause&gt;0&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 编译</span></span><br><span class="line">g++ .\MyFirstApp.cpp</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 运行</span></span><br><span class="line">.\a.exe</span><br></pre></td></tr></table></figure><ul><li><p>换行  <code>\n</code> 或 <code> &lt;&lt; endl;</code></p></li><li><p>编译命令 <code>g++ [source file] -o [output filename]</code></p></li></ul><h1 id="Variables"><a href="#Variables" class="headerlink" title="Variables"></a>Variables</h1><ul><li>命名<ul><li>构成: 下划线, 字母(区分大小写), 数字(不可数字开头)</li><li>一般用小驼峰命名法</li></ul></li></ul><p><strong>Data types</strong></p><table><thead><tr><th>类型</th><th>定义</th><th>size(bytes)</th><th>说明</th></tr></thead><tbody><tr><td>整数</td><td>int</td><td>4</td><td>-2147483648 to 2147483647</td></tr><tr><td>字符</td><td>char</td><td>1</td><td>单引号为字符 ‘a’</td></tr><tr><td>字符串</td><td>string</td><td></td><td>双引号为字符串 “character”</td></tr><tr><td>布尔</td><td>bool</td><td>1</td><td>true / false</td></tr><tr><td>浮点数</td><td>float</td><td>4</td><td></td></tr><tr><td>大浮点数</td><td>double</td><td>8</td><td></td></tr></tbody></table><p><strong>Data type overflow</strong></p><ul><li>变量的值超过其内存空间, 类似钟表指针, 13 点 = 1 点 (INT_MAX + 1 = INT_MIN)</li></ul><p><strong>ASCII table</strong></p><ul><li>asign characters to number (it’s for American)</li><li>ASCII extends: utf-(1-16)  (for others)</li><li>字符转换为ASCII数字 <code>(int)&#39;a&#39;</code> 和 <code>int(&#39;a&#39;)</code> 两种写法</li></ul><h1 id="Condition-Statement"><a href="#Condition-Statement" class="headerlink" title="Condition Statement"></a>Condition Statement</h1><p><strong>语法</strong></p><p><code>if()&#123;&#125;elif()&#123;&#125;else()&#123;&#125;</code></p><ul><li>注: 如果 <code>&#123;&#125;</code> 内只有一行代码, 可以不写 <code>&#123;&#125;</code></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> <span class="keyword">const</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//User enters side lengths of a triangle (a, b, c)</span></span><br><span class="line">    <span class="comment">//Program should write out whethre that triangle is</span></span><br><span class="line">    <span class="comment">//equilateral, isosceles or scalene</span></span><br><span class="line">    <span class="keyword">float</span> a, b, c;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;a, b, c: &quot;</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (a == b &amp;&amp; b == c)</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Equilateral triangle&quot;</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (a != b &amp;&amp; a != c &amp;&amp; b != c)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Scalene triangle&quot;</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Isosceles triangle&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Operators"><a href="#Operators" class="headerlink" title="Operators"></a>Operators</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> <span class="keyword">const</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 执行优先级 从上到下</span></span><br><span class="line">    <span class="comment">// + - * / %</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="number">1</span> + <span class="number">1</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="number">5</span> / <span class="number">2</span> &lt;&lt; <span class="built_in">endl</span>;  <span class="comment">// 2</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="number">5.0</span> / <span class="number">2</span> &lt;&lt; <span class="built_in">endl</span>;  <span class="comment">// 2.5</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// ++, --</span></span><br><span class="line">    <span class="keyword">int</span> counter = <span class="number">7</span>;</span><br><span class="line">    counter++;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; counter &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    counter--;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; counter &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> counter2 = <span class="number">7</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; counter2++ &lt;&lt; <span class="built_in">endl</span>;  <span class="comment">// 7</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; counter2 &lt;&lt; <span class="built_in">endl</span>;  <span class="comment">// 8</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ++counter2 &lt;&lt; <span class="built_in">endl</span>;  <span class="comment">// 9</span></span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>); <span class="comment">// clear console</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// &lt;, &gt;, &lt;=, &gt;=, ==, !=</span></span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">5</span>, b = <span class="number">5</span>;</span><br><span class="line">    <span class="comment">// cout &lt;&lt; (a &gt; b) &lt;&lt; endl;  // 0 for false (1 for true)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// &amp;&amp;, ||, !</span></span><br><span class="line">    <span class="keyword">int</span> c = <span class="number">8</span>, d = <span class="number">9</span>;</span><br><span class="line">    <span class="comment">// cout &lt;&lt; !(c == 5 &amp;&amp; b == 9);</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 优先级</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; (c == <span class="number">8</span> &amp;&amp; d == <span class="number">4</span> + <span class="number">5</span>);  <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// =, +=, -=, *=, /=, %=</span></span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">5</span>;</span><br><span class="line">    x += <span class="number">7</span>;  <span class="comment">//same as: x = x + 7</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; x &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="三目"><a href="#三目" class="headerlink" title="三目"></a>三目</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> <span class="keyword">const</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> hostUserNum, guestUserNum;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;HOST: &quot;</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; hostUserNum;</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Guest: &quot;</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; guestUserNum;</span><br><span class="line"></span><br><span class="line">    (hostUserNum == guestUserNum)? <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Correct!&quot;</span>: <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Failed!&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="switch-case"><a href="#switch-case" class="headerlink" title="switch case"></a>switch case</h1><blockquote><p>注意每个case后面必需接break退出, 因为程序只判断一次case条件, 进入一次后, 其他的case不会再判断, 会运行下面的所有case.</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> <span class="keyword">const</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">float</span> num1, num2;</span><br><span class="line">    <span class="keyword">char</span> operation;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Caculator&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; num1 &gt;&gt; operation &gt;&gt; num2;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (operation)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;-&#x27;</span>:<span class="built_in">cout</span> &lt;&lt; num1 &lt;&lt; operation &lt;&lt; num2 &lt;&lt; <span class="string">&quot;=&quot;</span> &lt;&lt; num1 - num2;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;+&#x27;</span>:<span class="built_in">cout</span> &lt;&lt; num1 &lt;&lt; operation &lt;&lt; num2 &lt;&lt; <span class="string">&quot;=&quot;</span> &lt;&lt; num1 + num2; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;*&#x27;</span>:<span class="built_in">cout</span> &lt;&lt; num1 &lt;&lt; operation &lt;&lt; num2 &lt;&lt; <span class="string">&quot;=&quot;</span> &lt;&lt; num1 * num2; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;/&#x27;</span>:<span class="built_in">cout</span> &lt;&lt; num1 &lt;&lt; operation &lt;&lt; num2 &lt;&lt; <span class="string">&quot;=&quot;</span> &lt;&lt; num1 / num2; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;%&#x27;</span>:</span><br><span class="line">        <span class="keyword">bool</span> isNum1Int, isNum2Int;</span><br><span class="line">        isNum1Int = (<span class="keyword">int</span>(num1) == num1);</span><br><span class="line">        isNum2Int = (<span class="keyword">int</span>(num2) == num2);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (isNum1Int &amp;&amp; isNum2Int)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; num1 &lt;&lt; operation &lt;&lt; num2 &lt;&lt; <span class="string">&quot;=&quot;</span> &lt;&lt; <span class="keyword">int</span>(num1) % <span class="keyword">int</span>(num2);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Not valid!&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">default</span>:<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Not valid opeation!&quot;</span>; <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;download&quot;&gt;&lt;a href=&quot;#download&quot; class=&quot;headerlink&quot; title=&quot;download&quot;&gt;&lt;/a&gt;download&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://sourceforge.net/project</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>源码安装mysql</title>
    <link href="http://example.com/2021/07/26/%E6%BA%90%E7%A0%81%E5%AE%89%E8%A3%85mysql/"/>
    <id>http://example.com/2021/07/26/%E6%BA%90%E7%A0%81%E5%AE%89%E8%A3%85mysql/</id>
    <published>2021-07-26T02:46:45.000Z</published>
    <updated>2021-09-08T09:47:44.475Z</updated>
    
    <content type="html"><![CDATA[<h1 id="源码安装Mysql"><a href="#源码安装Mysql" class="headerlink" title="源码安装Mysql"></a>源码安装Mysql</h1><blockquote><p>系统: CentOS 8</p></blockquote><h2 id="1-下载"><a href="#1-下载" class="headerlink" title="1. 下载"></a>1. 下载</h2><p><strong>官网找指定版本下载源码包</strong>   </p><blockquote><p> <a href="https://downloads.mysql.com/archives/community/">https://downloads.mysql.com/archives/community/</a></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://downloads.mysql.com/archives/get/p/23/file/mysql-boost-5.7.34.tar.gz</span><br></pre></td></tr></table></figure><h2 id="2-解压编译"><a href="#2-解压编译" class="headerlink" title="2. 解压编译"></a>2. 解压编译</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 解压</span></span><br><span class="line">tar -zvxf mysql-boost-5.7.34.tar.gz</span><br><span class="line">cd mysql-5.7.34</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装cmake</span></span><br><span class="line">yum install cmake</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 编译</span></span><br><span class="line">cmake .</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>编译时命令 <code>cmake .</code> 报错汇总</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 报错: undefined symbol: archive_write_add_filter_zstd</span></span><br><span class="line">yum install libarchive</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 报错: No CMAKE_CXX_COMPILER could be found.</span></span><br><span class="line">yum install gcc-c++</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 报错: CMake Error at cmake/boost.cmake:88, 根据提示命令增加额外安装boost目录</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> (也可自行下载安装Boost C++ 下载地址: https://sourceforge.net/projects/boost/files/boost/)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 注意 只能是1.59.0版本的boost</span></span><br><span class="line">mkdir -p /usr/local/boost</span><br><span class="line"></span><br><span class="line">cmake -DDOWNLOAD_BOOST=1 -DWITH_BOOST=/usr/local/boost .</span><br><span class="line"><span class="meta">#</span><span class="bash"> 或</span></span><br><span class="line">cd /usr/local/boost</span><br><span class="line">wget https://udomain.dl.sourceforge.net/project/boost/boost/1.59.0/boost_1_59_0.tar.gz</span><br><span class="line">tar -zvxf boost_1_59_0.tar.gz</span><br><span class="line">cmake . -DDOWNLOAD_BOOST=1 -DWITH_BOOST=/usr/local/boost/boost_1_59_0</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 报错: CMake Error at cmake/ssl.cmake:63 (MESSAGE): Please install the appropriate openssl developer package</span></span><br><span class="line">gg</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="二进制安装"><a href="#二进制安装" class="headerlink" title="二进制安装"></a>二进制安装</h1><h2 id="1-下载-1"><a href="#1-下载-1" class="headerlink" title="1. 下载"></a>1. 下载</h2><blockquote><p><a href="https://downloads.mysql.com/archives/community/">https://downloads.mysql.com/archives/community/</a></p><p>Operating System: Linux-Generic</p><p>OS Version: Linux-Generic(glibc 2.12) (x86, 64-bit)</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://downloads.mysql.com/archives/get/p/23/file/mysql-5.7.34-linux-glibc2.12-x86_64.tar.gz</span><br></pre></td></tr></table></figure><h2 id="2-安装"><a href="#2-安装" class="headerlink" title="2. 安装"></a>2. 安装</h2><blockquote><p>先查看下系统磁盘绑定情况, 再决定mysql data目录</p><p>命令: df -h</p></blockquote><h3 id="2-1-创建用户-用户组-数据目录"><a href="#2-1-创建用户-用户组-数据目录" class="headerlink" title="2.1. 创建用户, 用户组, 数据目录"></a>2.1. 创建用户, 用户组, 数据目录</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">groupadd mysql</span><br><span class="line">useradd -g mysql -d /home/mysql mysql</span><br><span class="line">mkdir /home/mysql/data</span><br></pre></td></tr></table></figure><h3 id="2-2-下载-解压"><a href="#2-2-下载-解压" class="headerlink" title="2.2. 下载, 解压"></a>2.2. 下载, 解压</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /home/mysql</span><br><span class="line">wget https://downloads.mysql.com/archives/get/p/23/file/mysql-5.7.34-linux-glibc2.12-x86_64.tar.gz</span><br><span class="line">tar -zvxf mysql-5.7.34-linux-glibc2.12-x86_64.tar.gz</span><br></pre></td></tr></table></figure><h3 id="2-3-配置启动"><a href="#2-3-配置启动" class="headerlink" title="2.3. 配置启动"></a>2.3. 配置启动</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 初始化配置</span></span><br><span class="line">./mysqld --user=mysql --basedir=/home/mysql --datadir=/home/mysql/data --initialize</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改basedir, datadir</span></span><br><span class="line">vim support-files/mysql.server</span><br><span class="line">--------------------------</span><br><span class="line">...</span><br><span class="line">basedir=/home/mysql</span><br><span class="line">datadir=/home/mysql/data</span><br><span class="line">...</span><br><span class="line">--------------------------</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建软链接使命令可全局使用</span></span><br><span class="line">ln -s /home/mysql/bin/mysql /usr/bin/mysql</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建配置文件</span></span><br><span class="line">vi /etc/my.cnf</span><br><span class="line">--------------------------</span><br><span class="line">...</span><br><span class="line">[mysqld]</span><br><span class="line"></span><br><span class="line">basedir = /home/mysql</span><br><span class="line">datadir = /home/mysql/data</span><br><span class="line"></span><br><span class="line">character-set-client-handshake = FALSE</span><br><span class="line">character-set-server = utf8mb4</span><br><span class="line">collation-server = utf8mb4_unicode_ci</span><br><span class="line">init_connect = &#x27;SET NAMES utf8mb4&#x27;</span><br><span class="line"></span><br><span class="line">[mysql]</span><br><span class="line">default-character-set = utf8mb4</span><br><span class="line"></span><br><span class="line">[client]</span><br><span class="line">default-character-set=utf8mb4</span><br><span class="line">...</span><br><span class="line">--------------------------</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 添加开机启动</span></span><br><span class="line">cp /home/mysql/support-files/mysql.server /etc/init.d/mysqld</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 增加可执行权限</span></span><br><span class="line">chmod 755 /etc/init.d/mysqld</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看开机启动列表是否有mysqld, 没有就根据提示添加</span></span><br><span class="line">chkconfig --list mysqld</span><br><span class="line">chkconfig --add mysqld </span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 启动mysql</span></span><br><span class="line">./support-files/mysql.server start</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 首次进入mysql 并修改root密码</span></span><br><span class="line">mysql -uroot -p</span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> alter user user() identified by <span class="string">&quot;修改的密码&quot;</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看默认编码集</span></span><br><span class="line">show variables where variable_name like &#x27;%char%&#x27; or variable_name like &#x27;collation%&#x27;;</span><br><span class="line">+--------------------------+-----------------------------+</span><br><span class="line">| Variable_name            | Value                       |</span><br><span class="line">+--------------------------+-----------------------------+</span><br><span class="line">| character_set_client     | utf8mb4                     |</span><br><span class="line">| character_set_connection | utf8mb4                     |</span><br><span class="line">| character_set_database   | utf8mb4                     |</span><br><span class="line">| character_set_filesystem | binary                      |</span><br><span class="line">| character_set_results    | utf8mb4                     |</span><br><span class="line">| character_set_server     | utf8mb4                     |</span><br><span class="line">| character_set_system     | utf8                        |</span><br><span class="line">| character_sets_dir       | /home/mysql/share/charsets/ |</span><br><span class="line">| collation_connection     | utf8mb4_unicode_ci          |</span><br><span class="line">| collation_database       | utf8mb4_unicode_ci          |</span><br><span class="line">| collation_server         | utf8mb4_unicode_ci          |</span><br><span class="line">+--------------------------+-----------------------------+</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> systemctl 显示mysqld退出但实际没退出时</span></span><br><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure><p><font color="red">启动mysql可能出现的错误:</font></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> error <span class="keyword">while</span> loading shared libraries: libncurses.so.5</span> </span><br><span class="line"><span class="meta">#</span><span class="bash"> error <span class="keyword">while</span> loading shared libraries: libtinfo.so.5</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 提示缺少依赖libncurses.so.5 和 libtinfo.so.5</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 但在 /usr/lib64 目录下是有 libtinfo.so.6.1 和 libncurses.so.6.1包的</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 所以只需创建个软链接让mysql启动时去找到 *.5的包但实际是调用 *.6.1的包即可</span></span><br><span class="line"></span><br><span class="line">sudo ln -s /usr/lib64/libncurses.so.6.1 /usr/lib64/libncurses.so.5</span><br><span class="line">sudo ln -s /usr/lib64/libtinfo.so.6.1 /usr/lib64/libtinfo.so.5</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;源码安装Mysql&quot;&gt;&lt;a href=&quot;#源码安装Mysql&quot; class=&quot;headerlink&quot; title=&quot;源码安装Mysql&quot;&gt;&lt;/a&gt;源码安装Mysql&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;系统: CentOS 8&lt;/p&gt;
&lt;/blockquote</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Chapter-02</title>
    <link href="http://example.com/2021/06/22/Chapter-02/"/>
    <id>http://example.com/2021/06/22/Chapter-02/</id>
    <published>2021-06-22T05:42:54.000Z</published>
    <updated>2021-09-08T09:47:44.473Z</updated>
    
    <content type="html"><![CDATA[<h1 id="计算机网络基础Chapter-2-物理层"><a href="#计算机网络基础Chapter-2-物理层" class="headerlink" title="计算机网络基础Chapter-2, 物理层"></a>计算机网络基础Chapter-2, 物理层</h1><h2 id="1-通信基础"><a href="#1-通信基础" class="headerlink" title="1. 通信基础"></a>1. 通信基础</h2><p><strong>物理层基本概念</strong></p><ul><li>物理层解决如何在连接各种计算机的传输媒体上<strong>传输数据比特流</strong>, 而不是指具体的传输媒体</li><li>主要任务: 确定与传输媒体接口有关的一些特性</li><li>机械特性:</li><li>电气特性:</li><li>功能特性:</li></ul><p><strong>数据通信基础</strong></p><p><img src="../images/image-20210622135226744.png" alt="image-20210622135226744"></p><ul><li>数据: 传送信息的实体, 通常是有意义的符号序列</li><li>信号: 数据的电气/电磁的表现, 是数据在传输过程中的存在形式<ul><li>数字信号: 代表消息的参数取值是离散的</li><li>模拟信号: 代表消息的参数取值是连续的 (正弦波)</li></ul></li><li>信源: 产生和发送数据的源头</li><li>信宿: 接收数据的终点</li><li>信道: <ul><li>按传输信号分类:</li><li>按</li></ul></li><li>三种通信方式:<ul><li>单工通信</li></ul></li></ul><h2 id="2-两个公式"><a href="#2-两个公式" class="headerlink" title="2. 两个公式"></a>2. 两个公式</h2><h2 id="3-看图说话"><a href="#3-看图说话" class="headerlink" title="3. 看图说话"></a>3. 看图说话</h2><h2 id="4-传输介质"><a href="#4-传输介质" class="headerlink" title="4. 传输介质"></a>4. 传输介质</h2><h2 id="5-物理层设备"><a href="#5-物理层设备" class="headerlink" title="5. 物理层设备"></a>5. 物理层设备</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;计算机网络基础Chapter-2-物理层&quot;&gt;&lt;a href=&quot;#计算机网络基础Chapter-2-物理层&quot; class=&quot;headerlink&quot; title=&quot;计算机网络基础Chapter-2, 物理层&quot;&gt;&lt;/a&gt;计算机网络基础Chapter-2, 物理层&lt;/h1</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Chapter-01</title>
    <link href="http://example.com/2021/06/16/Chapter-01/"/>
    <id>http://example.com/2021/06/16/Chapter-01/</id>
    <published>2021-06-16T14:05:05.000Z</published>
    <updated>2021-09-08T09:47:44.473Z</updated>
    
    <content type="html"><![CDATA[<h1 id="计算机网络基础Chapter-1"><a href="#计算机网络基础Chapter-1" class="headerlink" title="计算机网络基础Chapter-1"></a>计算机网络基础Chapter-1</h1><h2 id="1-性能指标"><a href="#1-性能指标" class="headerlink" title="1. 性能指标"></a>1. 性能指标</h2><p><strong>速率</strong></p><ul><li> 即数据率或称数据传输率或比特率</li></ul><table><thead><tr><th>速率（千，兆，吉，太）(kb, Mb, Gb, Tb)</th><th>存储容量(KB, MB, GB, TB)（1Byte = 8bit）</th></tr></thead><tbody><tr><td>千 1kb/s = 10**3 b/s</td><td>1KB = 2**10B = 1024B = 1024 * 8 b</td></tr></tbody></table><p><strong>带宽</strong></p><ul><li> 指网络的通信线路传送数据的能力， 通常是指单位时间内从网络中的一点到另一点所能通过的 <strong>最高数据率</strong>。</li><li>  单位: <strong>比特每秒</strong>， b/s, kb/s, Mb/s, Gb/s, 网络设备所支持的最高速度</li></ul><p> <strong>吞吐量</strong></p><ul><li>表示<strong>单位时间</strong> 内通过 **某个网络(或信道、接口)**的数据量</li><li>单位： b/s, kb/s, Mb/s等</li><li>吞吐量受网络的带宽或网络的额定速率的限制</li></ul><p> <strong>时延</strong></p><ul><li>指数据（报文/分组/比特流）从网络（或链路）的一端传送到另一端所需的时间，也叫延迟，单位s</li></ul><ul><li>发送时延（传输时延）：从发送分组的第一个比特算起， 到该分组的最后一个比特发送完毕所需的时间</li></ul><p>$$<br>发送时延 = \frac{数据长度}{信道带宽}<br>$$</p><ul><li>传播时延：取决于电磁波的传播速度和链路长度</li></ul><p>$$<br>传播时延 = \frac{信道长度}{3 * 10^8}<br>$$</p><ul><li>排队时延：等待输出/输入链路可用</li><li>处理时延：检错、找出口</li></ul><p><strong>时延带宽积</strong></p><ul><li>又称为 <strong>以比特为单位的链路长度</strong>， 即 某段链路现在有多少比特， 是指链路中某一时刻的比特容量</li></ul><p>$$<br>时延带宽积(bit) = 传播时延(s) \times 带宽 (b/s)<br>$$</p><p><strong>往返时间RTT</strong></p><ul><li>从发送方发送数据开始， 到发送方收到接收方的确认（接收方收到数据后立即发送确认），总共经历的时延<ul><li>如 ping 的time = 33ms</li></ul></li><li>RTT越大，在收到确认之前，可以发送的数据越多</li><li>RTT包括<ul><li>往返传播时延 = 传播时延 * 2</li><li>末端处理时间</li></ul></li></ul><p> <strong>利用率</strong></p><ul><li>信道利用率</li></ul><p>$$<br>信道利用率 = \frac{有数据通过时间}{（有+无）数据通过时间}<br>$$</p><ul><li>网络利用率： 信道利用率加权平均值</li></ul><blockquote><p>加权平均值即将各数值乘以相应的权数，然后加总求和得到总体值，再除以总的单位数。加权平均值的大小不仅取决于总体中各单位的数值（变量值）的大小，而且取决于各数值出现的次数（频数），由于各数值出现的次数对其在平均数中的影响起着权衡轻重的作用，因此叫做权数。</p></blockquote><h2 id="2-分层结构"><a href="#2-分层结构" class="headerlink" title="2. 分层结构"></a>2. 分层结构</h2><ul><li>实体：第n层中的活动元素称为 <strong>n层实体</strong>。同一层的实体叫 <strong>对等实体</strong>。</li><li>协议：为进行网络中的 <strong>对等实体</strong> 数据交换而建立的规则、标准或约定称为网络协议。</li><li>接口（访问服务点SAP）： 上层使用下层服务的入口。</li><li>服务：下层为相邻上层提供的功能调用。</li></ul><h3 id="2-1-OSI参考模型"><a href="#2-1-OSI参考模型" class="headerlink" title="2.1. OSI参考模型"></a>2.1. OSI参考模型</h3><p>目的：支持 <strong>异构网络系统</strong> 的互联互通。</p><p>国际标准化组织（ISO) 于1984年提出开放系统互连（OSI）参考模型。</p><table><thead><tr><th>OSI 七层</th><th>说明</th></tr></thead><tbody><tr><td>应用层</td><td>数据子网（数据处理）</td></tr><tr><td>表示层</td><td>数据子网（数据处理）</td></tr><tr><td>会话层</td><td>数据子网（数据处理）</td></tr><tr><td>传输层</td><td></td></tr><tr><td>网络层</td><td>通信子网（数据通信）</td></tr><tr><td>数据链路层</td><td>通信子网（数据通信）</td></tr><tr><td>物理层</td><td>通信子网（数据通信）</td></tr></tbody></table><ul><li>应用层<ul><li>定义：所有能和用户交互产生网络流量的程序</li><li>典型应用层服务：<ul><li>文件传输：FTP</li><li>电子邮件：SMTP</li><li>万维网：HTTP</li></ul></li></ul></li><li>表示层<ul><li>定义：用于处理在两个通信系统中交换信息的表示方式（语法和语义）</li><li>功能：<ul><li>数据格式变换</li><li>数据加密解密</li><li>数据压缩和恢复</li></ul></li></ul></li><li>会话层<ul><li>定义：向表示层实体/用户进程提供<strong>建立连接</strong>并在连接上<strong>有序地传输</strong>数据。这是会话， 也是<strong>建立同步</strong>（SYN)</li><li>功能：<ul><li>建立、管理、终止会话</li><li>使用校验点可使会话在通信失效时从 <strong>校验点/同步点</strong> 继续恢复通信，实现数据同步。（适用于传输大文件）</li></ul></li></ul></li><li>传输层<ul><li>定义：负责该机中 <strong>两个进程</strong> 的通信，即<strong>端到端</strong> 的通信。传输意念是报文段或用户数据报。</li><li>功能：<ul><li>可靠传输、不可靠传输<ul><li>可靠：先建立连接，确认机制，如握手，再传输数据</li><li>不可靠：无建立连接，直接传数据</li></ul></li><li>差错控制</li><li>流量控制</li><li>复用分用<ul><li>复用：多个应用层进程可同时使用下面传输层的服务</li><li>分用：运输层把收到的信息分别交付给上面应用层中相应的进程</li></ul></li></ul></li></ul></li><li>网络层<ul><li>定义：主要任务是把分组从源端传到目的端，为分组交换网上的不同该机提供通信服务。网络层传输单位是数据报</li><li>功能：<ul><li>路由选择：最佳路径</li><li>流量控制：限制发送端</li><li>差错控制</li><li>拥塞控制：若所有结点都来不及接受分组，而要丢弃大量分组的话，网络就处于拥塞状态。因此要采取一定措施，缓解这种拥塞。</li></ul></li></ul></li><li>数据链路层<ul><li>定义：主要任务是把网络层传下来的数据报组装成帧。传输单位是帧。</li><li>功能：<ul><li>成帧（定义帧的开始和结束）</li><li>差错控制：帧错+位错</li><li>流量控制：限制发送端速度</li><li>访问（接入）控制：控制对信道的访问</li></ul></li></ul></li><li>物理层<ul><li>定义：主要任务是在物理媒体上实现比特流的透明传输。传输单位是比特。</li><li>透明传输：指不管所传数据是什么样的比特组合，都应当能够在链路上传送。</li><li>功能：<ul><li>定义接口特性</li><li>定义传输模式<ul><li>单工、半双工、双工</li></ul></li><li>定义传输速率</li><li>比特同步</li><li>比特编码：用什么电压表示1， 什么电压表示0</li></ul></li></ul></li></ul><h3 id="2-2-TCP-IP模型"><a href="#2-2-TCP-IP模型" class="headerlink" title="2.2. TCP/IP模型"></a>2.2. TCP/IP模型</h3><table><thead><tr><th>TCP/IP 四层</th><th>协议栈</th></tr></thead><tbody><tr><td>应用层</td><td>HTTP，FTP，DNS，SMTP</td></tr><tr><td>传输层</td><td>TCP，UDP</td></tr><tr><td>网际层</td><td>IP</td></tr><tr><td>网络接口层</td><td>Ethernet, ATM, Frame Relay</td></tr></tbody></table><h3 id="2-3-OSI与TCP-IP对比"><a href="#2-3-OSI与TCP-IP对比" class="headerlink" title="2.3. OSI与TCP/IP对比"></a>2.3. OSI与TCP/IP对比</h3><ul><li>相同点<ul><li>都分层</li><li>基于独立的协议栈的概念</li><li>可以实现异构网络互联</li></ul></li><li>不同点<ul><li>OSI定义三点：服务、协议、接口</li><li>OSI先出现，参考模型先于协议发明，不偏向特定协议</li><li>TCP/IP设计之初就考虑到异构网互联问题，将IP作为重要层次</li></ul></li></ul><table><thead><tr><th></th><th>OSI</th><th>TCP/IP</th></tr></thead><tbody><tr><td>网络层</td><td>无连接 + 面向连接</td><td>无连接</td></tr><tr><td>传输层</td><td>面向连接</td><td>无连接 + 面向连接</td></tr></tbody></table><p><strong>面向连接</strong>分为三个阶段：</p><ol><li>建立连接，在此阶段，发出一个建立连接的请求。</li><li>只有连接成功建立之后，才能开始传输数据， 这是第二阶段</li><li>当数据传输完毕必须释放连接</li></ol><p><strong>无连接</strong>直接进行数据传输</p><h3 id="2-4-5层参考模型"><a href="#2-4-5层参考模型" class="headerlink" title="2.4. 5层参考模型"></a>2.4. 5层参考模型</h3><table><thead><tr><th>5层参考模型</th><th>说明</th><th>协议</th></tr></thead><tbody><tr><td>应用层</td><td>支持各种网络应用</td><td>FTP、SMTP、HTTP</td></tr><tr><td>传输层</td><td>进程-进程的数据传输</td><td>TCP、UDP</td></tr><tr><td>网络层</td><td>源主机到目的主机的数据分组路由与转发</td><td>IP、ICMP、OSPF</td></tr><tr><td>数据链路层</td><td>把网络层传下来的数据报组装成帧</td><td>Ethernet、PPP</td></tr><tr><td>物理层</td><td>比特传输</td><td></td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;计算机网络基础Chapter-1&quot;&gt;&lt;a href=&quot;#计算机网络基础Chapter-1&quot; class=&quot;headerlink&quot; title=&quot;计算机网络基础Chapter-1&quot;&gt;&lt;/a&gt;计算机网络基础Chapter-1&lt;/h1&gt;&lt;h2 id=&quot;1-性能指标&quot;&gt;&lt;</summary>
      
    
    
    
    
    <category term="网络基础" scheme="http://example.com/tags/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>配置frp内网穿透</title>
    <link href="http://example.com/2021/06/03/%E9%85%8D%E7%BD%AEfrp%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/"/>
    <id>http://example.com/2021/06/03/%E9%85%8D%E7%BD%AEfrp%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/</id>
    <published>2021-06-03T01:34:18.000Z</published>
    <updated>2022-03-18T00:59:57.315Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-下载对应包"><a href="#1-下载对应包" class="headerlink" title="1. 下载对应包"></a>1. 下载对应包</h3><blockquote><p><a href="https://github.com/fatedier/frp/releases">https://github.com/fatedier/frp/releases</a></p></blockquote><p>在git上找到对应自己系统版本的链接, 并下载到服务器</p><p>例:</p><p><code>wget https://github.com/fatedier/frp/releases/download/v0.37.0/frp_0.37.0_linux_386.tar.gz</code></p><h3 id="2-解压缩"><a href="#2-解压缩" class="headerlink" title="2. 解压缩"></a>2. 解压缩</h3><p><code>tar -zvxf frp_0.37.0_linux_386.tar.gz</code></p><h3 id="3-修改服务器配置"><a href="#3-修改服务器配置" class="headerlink" title="3. 修改服务器配置"></a>3. 修改服务器配置</h3><blockquote><p>后台运行: <code>nohup ./frps -c frps.ini &gt;/dev/null 2&gt;&amp;1 &amp;</code></p><p>bind_port FRP使用端口</p><p>v_host_http_port 外部访问端口(可配置nginx proxy_pass转发)</p></blockquote><ul><li><code>vi frps.ini</code></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line">bind_port = 7000</span><br><span class="line">token = 12345678</span><br><span class="line">vhost_http_port = 80</span><br></pre></td></tr></table></figure><ul><li>启动: <code>./frps -c frps.ini</code></li></ul><h3 id="4-修改客户端配置"><a href="#4-修改客户端配置" class="headerlink" title="4. 修改客户端配置"></a>4. 修改客户端配置</h3><blockquote><p>客户端下载同服务端</p></blockquote><ul><li><code>vi frpc.ini</code></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line">server_addr = 106.14.30.129</span><br><span class="line">server_port = 7000</span><br><span class="line">token = 12345678</span><br><span class="line">tls_enable = true</span><br><span class="line"></span><br><span class="line">[krkdwc]</span><br><span class="line">type = http</span><br><span class="line">custom_domains = dev.bogwang.cn</span><br><span class="line">local_port = 5000</span><br></pre></td></tr></table></figure><ul><li>启动: <code>./frpc -c frpc.ini</code></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;1-下载对应包&quot;&gt;&lt;a href=&quot;#1-下载对应包&quot; class=&quot;headerlink&quot; title=&quot;1. 下载对应包&quot;&gt;&lt;/a&gt;1. 下载对应包&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/fatedie</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>mac + python + oracle.md</title>
    <link href="http://example.com/2021/06/01/mac%E4%B8%8B%E4%BD%BF%E7%94%A8oracle/"/>
    <id>http://example.com/2021/06/01/mac%E4%B8%8B%E4%BD%BF%E7%94%A8oracle/</id>
    <published>2021-06-01T01:56:00.000Z</published>
    <updated>2021-09-08T09:47:44.474Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Oracle 字符串只能用单引号</p></blockquote><h3 id="mac安装通过docker安装使用oracle"><a href="#mac安装通过docker安装使用oracle" class="headerlink" title="mac安装通过docker安装使用oracle"></a>mac安装通过docker安装使用oracle</h3><blockquote><p>参考: <a href="https://github.com/MaksymBilenko/docker-oracle-12c">https://github.com/MaksymBilenko/docker-oracle-12c</a></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 拉取镜像</span></span><br><span class="line">docker pull quay.io/maksymbilenko/oracle-12c</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建容器并运行</span></span><br><span class="line">docker run -d -p 8080:8080 -p 1521:1521 --name=oracle quay.io/maksymbilenko/oracle-12c</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 连接配置</span></span><br><span class="line">hostname: localhost</span><br><span class="line">port: 1521</span><br><span class="line">sid: xe</span><br><span class="line">service name: xe</span><br><span class="line">username: system</span><br><span class="line">password: oracle</span><br></pre></td></tr></table></figure><h3 id="基操"><a href="#基操" class="headerlink" title="基操"></a>基操</h3><ul><li>查看数据库版本: <code>select * from v$version;</code></li></ul><h4 id="用户"><a href="#用户" class="headerlink" title="用户"></a>用户</h4><ul><li>创建用户:  <code>create user 用户名 identified by 密码</code><ul><li>  例: <code>create user test identified by test</code></li></ul></li></ul><blockquote><p>第一次创建<code>create user &#39;root&#39; identified by &#39;123456&#39;</code> </p><p>提示 missing user or role name 是因为此处用户名不需要引号</p><p>修改后提示无效密码, 同样密码也不需要引号</p></blockquote><ul><li>修改密码: <code>alter user 用户名 identified by 新密码</code></li></ul><h4 id="角色"><a href="#角色" class="headerlink" title="角色"></a>角色</h4><blockquote><p>oracle为兼容以前版本，提供三种标准角色（role）:connect, resource和dba.</p></blockquote><ol><li>connect role(连接角色)</li></ol><p>–临时用户，特指不需要建表的用户，通常只赋予他们connect role. </p><p>–connect是使用oracle简单权限，这种权限只对其他用户的表有访问权限，包括select/insert/update和delete等。</p><p>–拥有connect role 的用户还能够创建表、视图、序列（sequence）、簇（cluster）、同义词(synonym)、回话（session）和其他 数据的链（link）</p><ol start="2"><li>resource role(资源角色)</li></ol><p>–更可靠和正式的数据库用户可以授予resource role。</p><p>–resource提供给用户另外的权限以创建他们自己的表、序列、过程(procedure)、触发器(trigger)、索引(index)和簇(cluster)。</p><ol start="3"><li>dba role(数据库管理员角色)</li></ol><p>–dba role拥有所有的系统权限</p><p>–包括无限制的空间限额和给其他用户授予各种权限的能力。system由dba用户拥有</p><p>除了前面三种系统角色—-connect、resource和dba，用户还可以在oracle创建自己的role。</p><p>用户创建的role可以由表或系统权限或两者的组合构成。</p><p>为了创建role，用户必须具有create role系统权限。</p><ol><li><p>创建角色: <code>create role 角色名;</code></p></li><li><p>授权角色:  <code>grant select on 表名 to 角色名;</code></p></li><li><p>删除角色: <code>drop role 角色名;</code></p></li></ol><h4 id="权限"><a href="#权限" class="headerlink" title="权限"></a>权限</h4><ul><li>授权: <code>grant connect, resource to 用户名;</code></li><li>撤消:  <code>revoke connect, resource from 用户名;</code></li></ul><h3 id="库表"><a href="#库表" class="headerlink" title="库表"></a>库表</h3><blockquote><p>创建表时提示:  <code>no privileges on tablespace USERS</code></p><p>执行: <code>alter user 库名 quota unlimited on users;</code></p></blockquote><ul><li>创建数据库: <code>create tablespace 表间名 datafile &#39;数据文件名&#39; size 表空间大小;</code><ul><li>例: <code>create tablespace TEST datafile &#39;test&#39; size 20M;</code></li></ul></li><li>查看建表语句: <code>select dbms_metadata.get_ddl(&#39;TABLE&#39;,&#39;USERINFO&#39;) from dual;</code></li></ul><h3 id="错误汇总"><a href="#错误汇总" class="headerlink" title="错误汇总"></a>错误汇总</h3><ul><li>找不到 <code>libocci.dylib</code></li></ul><p>参考: <code>https://cx-oracle.readthedocs.io/en/latest/user_guide/installation.html</code> 根据提示要安装 <code>Oracle Instant Client</code> </p><p>下载 <code>http://www.oracle.com/technetwork/topics/intel-macsoft-096467.html</code> 的<code>Basic Package</code> </p><p>下载解压后在环境变量中添加 <code>export DYLD_LIBRARY_PATH=解压文件目录</code></p><ul><li>ORA-12541</li></ul><p>服务未启动</p><ul><li>ORA-12505</li></ul><p>报错时的配置: <code>oracle+cx_oracle://test:123456@localhost:1521/TEST</code></p><p>连接配置不是具体到库, 而是到服务名, 修改为: <code>oracle+cx_oracle://test:123456@localhost:1521/xe</code></p><blockquote><p>服务名查看命令: <code>select INSTANCE_NAME from v$instance;</code></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Oracle 字符串只能用单引号&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;mac安装通过docker安装使用oracle&quot;&gt;&lt;a href=&quot;#mac安装通过docker安装使用oracle&quot; class=&quot;headerlink&quot; ti</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>cookiecutter-flask-restful使用笔记</title>
    <link href="http://example.com/2021/04/02/cookiecutter-flask-restful%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/"/>
    <id>http://example.com/2021/04/02/cookiecutter-flask-restful%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/</id>
    <published>2021-04-02T09:40:17.000Z</published>
    <updated>2021-09-08T09:47:44.474Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h1 id="flask-cookiecutter-restful-使用"><a href="#flask-cookiecutter-restful-使用" class="headerlink" title="flask-cookiecutter-restful 使用"></a>flask-cookiecutter-restful 使用</h1><h2 id="一-本地开发准备"><a href="#一-本地开发准备" class="headerlink" title="一. 本地开发准备"></a>一. 本地开发准备</h2><h3 id="1-源码安装python-3-7-10"><a href="#1-源码安装python-3-7-10" class="headerlink" title="1. 源码安装python-3.7.10"></a>1. 源码安装python-3.7.10</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget -c https://www.python.org/ftp/python/3.7.10/Python-3.7.10.tar.xz</span><br><span class="line">tar -zxvf Python-3.7.10.tar.xz</span><br><span class="line">cd Python-3.7.10/Modules</span><br><span class="line">vim Setup.dist</span><br></pre></td></tr></table></figure><p>搜索:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:/ssl</span><br></pre></td></tr></table></figure><p>将以下内容取消注释:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Socket module helper <span class="keyword">for</span> socket(2)</span></span><br><span class="line"><span class="meta">#</span><span class="bash">_socket socketmodule.c</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Socket module helper <span class="keyword">for</span> SSL support; you must comment out the other</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> socket line above, and possibly edit the SSL variable:</span></span><br><span class="line"><span class="meta">#</span><span class="bash">SSL=/usr/<span class="built_in">local</span>/ssl</span></span><br><span class="line"><span class="meta">#</span><span class="bash">_ssl _ssl.c \</span></span><br><span class="line"><span class="bash"><span class="comment"># -DUSE_SSL -I$(SSL)/include -I$(SSL)/include/openssl \</span></span></span><br><span class="line"><span class="bash"><span class="comment"># -L$(SSL)/lib -lssl -lcrypto</span></span></span><br></pre></td></tr></table></figure><p>取消注释如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Socket module helper <span class="keyword">for</span> socket(2)</span></span><br><span class="line">_socket socketmodule.c</span><br><span class="line"><span class="meta">#</span><span class="bash"> Socket module helper <span class="keyword">for</span> SSL support; you must comment out the other</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> socket line above, and possibly edit the SSL variable:</span></span><br><span class="line"><span class="meta">#</span><span class="bash">SSL=/usr/<span class="built_in">local</span>/ssl</span></span><br><span class="line">_ssl _ssl.c \</span><br><span class="line">-DUSE_SSL -I$(SSL)/include -I$(SSL)/include/openssl \</span><br><span class="line"><span class="meta">-L$</span><span class="bash">(SSL)/lib -lssl -lcrypto</span></span><br></pre></td></tr></table></figure><p>返回Python源码根目录编译安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd ..&#x2F;</span><br><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;python3.7.10 --enable-loadable-sqlite-extensions</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>将 /usr/local/python3.6/bin 加入 PATH， 在<code>/etc/profile</code>文件后追加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;profile</span><br></pre></td></tr></table></figure><p>追回内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PATH&#x3D;&#x2F;usr&#x2F;local&#x2F;python3.7&#x2F;bin:$PATH</span><br></pre></td></tr></table></figure><p>设置python, pip别名：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~&#x2F;.bashrc</span><br></pre></td></tr></table></figure><p>内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alias python3.7&#x3D;&#x2F;usr&#x2F;local&#x2F;python3.7.10&#x2F;bin&#x2F;python3</span><br><span class="line">alias pip3.7&#x3D;&#x2F;usr&#x2F;local&#x2F;python3.7.10&#x2F;bin&#x2F;pip3</span><br></pre></td></tr></table></figure><h3 id="2-使用cookiecutter创建项目"><a href="#2-使用cookiecutter创建项目" class="headerlink" title="2. 使用cookiecutter创建项目"></a>2. 使用cookiecutter创建项目</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pip install cookiecutter</span><br><span class="line"></span><br><span class="line">cookiecutter https://github.com/karec/cookiecutter-flask-restful</span><br></pre></td></tr></table></figure><h3 id="3-pipenv-创建虚拟环境"><a href="#3-pipenv-创建虚拟环境" class="headerlink" title="3. pipenv 创建虚拟环境"></a>3. pipenv 创建虚拟环境</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装</span></span><br><span class="line">pip install pipenv</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 更新</span></span><br><span class="line">pip install --user --upgrade pipenv</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 指定Python版本创建虚拟环境</span></span><br><span class="line">pipenv --python 3.7</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 进入虚拟环境</span></span><br><span class="line">pipenv shell</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装包</span></span><br><span class="line">pipenv install</span><br><span class="line"><span class="meta">#</span><span class="bash"> 或</span></span><br><span class="line">pipenv install -r requirements.txt</span><br></pre></td></tr></table></figure><h3 id="4-数据库"><a href="#4-数据库" class="headerlink" title="4. 数据库"></a>4. 数据库</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 本地创建相关库</span></span><br><span class="line">CREATE DATABASE `aipms` /*!40100 DEFAULT CHARACTER SET utf8mb4 */</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 项目配置数据库, 修改.env</span></span><br><span class="line">DATABASE_URI=mysql+pymysql://root:123456@localhost:3306/aipms?charset=utf8mb4</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 进虚拟环境</span></span><br><span class="line">pipenv shell</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 生成迁移文件</span></span><br><span class="line">flask db migrate -m &#x27;init migration&#x27;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 更新到数据库</span></span><br><span class="line">flask db upgrate</span><br></pre></td></tr></table></figure><h3 id="5-接口测试"><a href="#5-接口测试" class="headerlink" title="5. 接口测试"></a>5. 接口测试</h3><ul><li>注册<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">curl --location --request POST &#x27;http://127.0.0.1:5002/auth/register&#x27; \</span><br><span class="line">--header &#x27;Content-Type: application/json&#x27; \</span><br><span class="line">--data-raw &#x27;&#123;</span><br><span class="line">    &quot;username&quot;: &quot;admin&quot;,</span><br><span class="line">    &quot;password&quot;: &quot;admin&quot;</span><br><span class="line">&#125;&#x27;</span><br></pre></td></tr></table></figure></li><li>登录<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">curl --location --request POST &#x27;http://127.0.0.1:5002/auth/login&#x27; \</span><br><span class="line">--header &#x27;Content-Type: application/json&#x27; \</span><br><span class="line">--data-raw &#x27;&#123;</span><br><span class="line">    &quot;username&quot;: &quot;admin&quot;,</span><br><span class="line">    &quot;password&quot;: &quot;admin&quot;</span><br><span class="line">&#125;&#x27;</span><br></pre></td></tr></table></figure></li></ul><h3 id="6-git"><a href="#6-git" class="headerlink" title="6. git"></a>6. git</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> git初始化</span></span><br><span class="line">git init</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 添加源</span></span><br><span class="line">git remote add origin git@*****</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 拉取代码, 有冲突解决冲突</span></span><br><span class="line">git pull</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 切换新分支</span></span><br><span class="line">git checkout -b feature-init</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> add 所有</span></span><br><span class="line">git add .</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> commit</span></span><br><span class="line">git commit -m &#x27;init&#x27;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 分支推送到远程库</span></span><br><span class="line">git push --set-upstream origin feature-init</span><br></pre></td></tr></table></figure><h2 id="二-部署"><a href="#二-部署" class="headerlink" title="二. 部署"></a>二. 部署</h2><h3 id="1-gunicorn"><a href="#1-gunicorn" class="headerlink" title="1. gunicorn"></a>1. gunicorn</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pipenv install gunicorn</span><br></pre></td></tr></table></figure><h3 id="2-docker"><a href="#2-docker" class="headerlink" title="2. docker"></a>2. docker</h3><ul><li>安docker</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install docker</span><br></pre></td></tr></table></figure><ul><li>安docker-compose</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 -m pip install docker-compose</span><br></pre></td></tr></table></figure><ul><li>登录docker<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker login</span><br></pre></td></tr></table></figure></li><li>拉取基础Image<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull python:3.7.10-alpine</span><br></pre></td></tr></table></figure></li><li>创建容器并进入<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it --name=container_name python:3.7.10-alpine /bin/sh</span><br></pre></td></tr></table></figure></li><li>配置dockerfile<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure></li><li>从dockerfile启动项目<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -t container_name ./Dockerfile</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h1 id=&quot;flask-cookiecutter-restful-使用&quot;&gt;&lt;a href=&quot;#flask-cookiecutter-restful-使用&quot; class=&quot;headerlink&quot; title=&quot;flask-cookiecutter-re</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Flask-Migrate报错</title>
    <link href="http://example.com/2021/03/25/Flask-Migrate%E6%8A%A5%E9%94%99/"/>
    <id>http://example.com/2021/03/25/Flask-Migrate%E6%8A%A5%E9%94%99/</id>
    <published>2021-03-25T09:06:06.000Z</published>
    <updated>2021-09-08T09:47:44.474Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Flask-Migrate-pgsql-执行报错psycopg2-errors-DuplicateTable-relation-“user”-already-exists"><a href="#Flask-Migrate-pgsql-执行报错psycopg2-errors-DuplicateTable-relation-“user”-already-exists" class="headerlink" title="Flask-Migrate  + pgsql 执行报错psycopg2.errors.DuplicateTable: relation “user” already exists"></a>Flask-Migrate  + pgsql 执行报错psycopg2.errors.DuplicateTable: relation “user” already exists</h1><p><strong>问题出现</strong>: 全新项目, 本来是打算用mysql, 后来换pgsql, 一开始用mysql时执行过 <code>flask db migrate / flask db upgrade</code>, 测试ORM,, 换成pgsql后再执行<code>flask db upgrade</code>出现如上报错, 看字面意思是表已存在, 可pgsql中并没有此表!</p><p><strong>原因</strong>: 一开始执行 <code>flask db migrate</code> 时 alembic 已经创建了记录(versions目录下的.py文件), 也就是说对 alembic 来说是已经创建过数据表了, 在sql语句执行前就被报错拦截住了, 所以即使数据库没有user表, 报错也提示表已存在!</p><p><strong>解决</strong>: 直接把 versions 目录下记录全部删除, 重新执行 <code>flask db upgrade </code> </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Flask-Migrate-pgsql-执行报错psycopg2-errors-DuplicateTable-relation-“user”-already-exists&quot;&gt;&lt;a href=&quot;#Flask-Migrate-pgsql-执行报错psycopg2-er</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>nginx</title>
    <link href="http://example.com/2021/03/18/nginx/"/>
    <id>http://example.com/2021/03/18/nginx/</id>
    <published>2021-03-18T09:10:44.000Z</published>
    <updated>2021-09-08T09:47:44.474Z</updated>
    
    <content type="html"><![CDATA[<h3 id="nginx服务更新证书"><a href="#nginx服务更新证书" class="headerlink" title="nginx服务更新证书"></a>nginx服务更新证书</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">nginx配置文件: &#x2F;etc&#x2F;nginx&#x2F;sites_enabled</span><br><span class="line">server &#123;</span><br><span class="line">    listen  443;</span><br><span class="line">    server_name djdeveloper.cn *.djdeveloper.cn;</span><br><span class="line">    root    &#x2F;var&#x2F;www&#x2F;djdeveloper.cn;</span><br><span class="line">    autoindex   off;</span><br><span class="line">    ssl on;</span><br><span class="line">    ssl_certificate &#x2F;etc&#x2F;nginx&#x2F;ssl&#x2F;djdeveloper.full.crt;</span><br><span class="line">    ssl_certificate_key  &#x2F;etc&#x2F;nginx&#x2F;ssl&#x2F;djdeveloper.key;</span><br><span class="line"></span><br><span class="line">    ssl_session_cache       shared:SSL:1m;</span><br><span class="line">    ssl_session_timeout     5m;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">nginx证书: &#x2F;etc&#x2F;nginx&#x2F;ssl</span><br><span class="line"></span><br><span class="line">cp **.full.crt **.full.crt.bak</span><br><span class="line">cp **.key **.key.bak</span><br><span class="line"></span><br><span class="line">vim **.full.crt cp</span><br><span class="line">vim **.key cp</span><br><span class="line"></span><br><span class="line">nginx -s reload</span><br></pre></td></tr></table></figure><h3 id="配置跨域"><a href="#配置跨域" class="headerlink" title="配置跨域:"></a>配置跨域:</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">位置: http&#123;这里, server&#123;&#125;&#125;</span><br><span class="line"></span><br><span class="line">add_header &#x27;Access-Control-Allow-Origin&#x27; &#x27;*&#x27;;</span><br><span class="line">add_header &#x27;Access-Control-Allow-Credentials&#x27; &#x27;true&#x27;;</span><br></pre></td></tr></table></figure><h3 id="nginx-502-错误初步排查"><a href="#nginx-502-错误初步排查" class="headerlink" title="nginx 502 错误初步排查"></a>nginx 502 错误初步排查</h3><ul><li>nginx 配置文件默认目录 /etc/nginx/nginx.conf</li><li>配置文件中有 include * 为包含的配置文件</li><li>access_log off 为关闭日志, 开启后为 access_log /var/www/ccd.log</li><li>如果在日志文件中能看到请求说明与nginx无关, 是项目的问题</li><li>nginx -s reload</li><li>nginx -t 检查配置文件语法是否正确</li><li>lsof -i:port1 检查端口使用 CLOSE_WAIT 时看 port1 -&gt; port2 是port2出了问题</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;nginx服务更新证书&quot;&gt;&lt;a href=&quot;#nginx服务更新证书&quot; class=&quot;headerlink&quot; title=&quot;nginx服务更新证书&quot;&gt;&lt;/a&gt;nginx服务更新证书&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;tabl</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>微信公众号</title>
    <link href="http://example.com/2021/03/18/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7/"/>
    <id>http://example.com/2021/03/18/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7/</id>
    <published>2021-03-18T09:09:33.000Z</published>
    <updated>2022-06-24T03:45:47.651Z</updated>
    
    <content type="html"><![CDATA[<h3 id="redirect-uri错误"><a href="#redirect-uri错误" class="headerlink" title="redirect_uri错误"></a>redirect_uri错误</h3><ol><li><p>首先确定<code>基本配置</code>中的 appID, appSecret, 服务器配置是否启用, 服务器地址, token是否都配置正确.</p></li><li><p><code>接口权限</code>-<code>网页授权获取用户基本信息</code>-<code>修改</code></p></li></ol><ul><li>注意: 这里有个大坑, 使用的url最好是直接域名, 如果有层级要保证项目实际使用的url全是在这里填写的层级之下的, 不然即使这里修改成功, 还是会报redirect_uri错误</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;redirect-uri错误&quot;&gt;&lt;a href=&quot;#redirect-uri错误&quot; class=&quot;headerlink&quot; title=&quot;redirect_uri错误&quot;&gt;&lt;/a&gt;redirect_uri错误&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;首先确定&lt;code&gt;基本配</summary>
      
    
    
    
    <category term="微信公众号" scheme="http://example.com/categories/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7/"/>
    
    
    <category term="bug" scheme="http://example.com/tags/bug/"/>
    
  </entry>
  
  <entry>
    <title>nginx相关</title>
    <link href="http://example.com/2021/03/18/nginx%E7%9B%B8%E5%85%B3/"/>
    <id>http://example.com/2021/03/18/nginx%E7%9B%B8%E5%85%B3/</id>
    <published>2021-03-18T09:05:06.000Z</published>
    <updated>2021-09-08T09:47:44.474Z</updated>
    
    <content type="html"><![CDATA[<h3 id="nginx服务更新证书"><a href="#nginx服务更新证书" class="headerlink" title="nginx服务更新证书"></a>nginx服务更新证书</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">nginx配置文件: &#x2F;etc&#x2F;nginx&#x2F;sites_enabled</span><br><span class="line">server &#123;</span><br><span class="line">    listen  443;</span><br><span class="line">    server_name djdeveloper.cn *.djdeveloper.cn;</span><br><span class="line">    root    &#x2F;var&#x2F;www&#x2F;djdeveloper.cn;</span><br><span class="line">    autoindex   off;</span><br><span class="line">    ssl on;</span><br><span class="line">    ssl_certificate &#x2F;etc&#x2F;nginx&#x2F;ssl&#x2F;djdeveloper.full.crt;</span><br><span class="line">    ssl_certificate_key  &#x2F;etc&#x2F;nginx&#x2F;ssl&#x2F;djdeveloper.key;</span><br><span class="line"></span><br><span class="line">    ssl_session_cache       shared:SSL:1m;</span><br><span class="line">    ssl_session_timeout     5m;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">nginx证书: &#x2F;etc&#x2F;nginx&#x2F;ssl</span><br><span class="line"></span><br><span class="line">cp **.full.crt **.full.crt.bak</span><br><span class="line">cp **.key **.key.bak</span><br><span class="line"></span><br><span class="line">vim **.full.crt cp</span><br><span class="line">vim **.key cp</span><br><span class="line"></span><br><span class="line">nginx -s reload</span><br></pre></td></tr></table></figure><h3 id="配置跨域"><a href="#配置跨域" class="headerlink" title="配置跨域:"></a>配置跨域:</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">位置: http&#123;这里, server&#123;&#125;&#125;</span><br><span class="line"></span><br><span class="line">add_header &#x27;Access-Control-Allow-Origin&#x27; &#x27;*&#x27;;</span><br><span class="line">add_header &#x27;Access-Control-Allow-Credentials&#x27; &#x27;true&#x27;;</span><br></pre></td></tr></table></figure><h3 id="nginx-502-错误初步排查"><a href="#nginx-502-错误初步排查" class="headerlink" title="nginx 502 错误初步排查"></a>nginx 502 错误初步排查</h3><ul><li>nginx 配置文件默认目录 /etc/nginx/nginx.conf</li><li>配置文件中有 include * 为包含的配置文件</li><li>access_log off 为关闭日志, 开启后为 access_log /var/www/ccd.log</li><li>如果在日志文件中能看到请求说明与nginx无关, 是项目的问题</li><li>nginx -s reload</li><li>nginx -t 检查配置文件语法是否正确</li><li>lsof -i:port1 检查端口使用 CLOSE_WAIT 时看 port1 -&gt; port2 是port2出了问题</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;nginx服务更新证书&quot;&gt;&lt;a href=&quot;#nginx服务更新证书&quot; class=&quot;headerlink&quot; title=&quot;nginx服务更新证书&quot;&gt;&lt;/a&gt;nginx服务更新证书&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;tabl</summary>
      
    
    
    
    
  </entry>
  
</feed>
